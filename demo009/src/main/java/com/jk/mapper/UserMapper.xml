<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间(namespace)，作用就是对sql进行分类的管理，sql隔离 -->
<mapper namespace="com.jk.mapper.UserMapper">

	<!-- 定义查询用户信息及用户购买的商品的 resultMap,将整个的查询结果映射到com.jk.result.UserItems中 -->
	<resultMap type="com.jk.result.UserItems" id="OrdersUserResultMap">
		<!-- 配置映射的用户信息 -->
		<!-- 
		    id:查询列中的唯一标识,订单信息中的唯一标识，如果多列组成唯一标识(如：一般数据库设计中的字典表 使用联合主键)，就需要配置多个id 
			column:订单信息的唯一标识 列 
			property:订单信息的唯一标识列所映射到orders中的那个属性(假如：数据库中orders表中的主键为orders_id,而实体属性名称为ordersId, 
			则这个配置应为<id column="orders_id" property="ordersId"/>,类似hibernate实体映射文件配置)。
		 -->
		<id column="id" property="id" />

		<result column="username" property="username" />

		<result column="sex" property="sex" />

		<result column="birthday" property="birthday" />

		<result column="address" property="address" />

		<!-- 
		         一个用户可能会购买多个商品：要使用collection映射
            collection:对关联查询到的多条记录映射到集合中
            property:将关联查询到的多条记录映射到orders类的那个属性
            ofType:指定映射的集合属性中pojo的类型
        -->
		<collection  property="items" ofType="com.jk.bean.Items">
			<!-- 
			     id:关联查询用户的唯一标识 
			     column:指定唯一标识用户信息的列 
			-->
			<id column="items_id" property="id" />
			<result column="itemsname" property="itemsname" />
			<result column="price" property="price" />
			<result column="detail" property="detail" />
			<result column="pic" property="pic" />
			<result column="createtime" property="createtime" />
		</collection>
	</resultMap>

	<!-- 查询订单，关联查询用户信息,使用resultMap实现 -->
	<select id="selectOrderAndUser2" resultMap="OrdersUserResultMap">
		SELECT t1.*,t4.id items_id,t4.itemsname,t4.price,t4.detail FROM t_user t1,orders t2,orderdetail t3,items t4 WHERE t1.id=t2.user_id AND t3.orders_id=t2.id AND t3.items_id=t4.id ORDER BY id ASC;
	</select>
</mapper>