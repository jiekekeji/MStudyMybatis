<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <!--导入属性配置 同目录下的generator.properties文件-->
	<properties resource="db.properties"></properties>
	
	<context id="testTables" targetRuntime="MyBatis3">
		<!--pojo自动生成toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        
        <!--pojo自动生成equals方法和hashcode方法 -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        
		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="true" />
		</commentGenerator>

		<!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
		 <jdbcConnection driverClass="${jdbc.driverClass}"
                         connectionURL="${jdbc.connectionURL}" 
                         userId="${jdbc.userId}"
                         password="${jdbc.password}">
        </jdbcConnection>

		<!-- 
		            默认false:把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，
		           为 true时:把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
		 -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- targetProject:生成PO类和Example类的位置 -->
		<javaModelGenerator targetPackage="com.jk.pojo" targetProject="src/main/java">
		    <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
            <!-- 给Model添加一个父类 -->
            <!--<property name="rootClass" value="com.store.model.BaseBean"/>-->
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
		</javaModelGenerator>
		
		<!-- targetProject:mapper.xml映射文件生成的位置 -->
		<sqlMapGenerator targetPackage="com.jk.mapper" targetProject="src/main/java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		
		<!-- targetPackage：mapper接口生成的位置 -->
		<!--
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="com.jk.mapper" targetProject="src/main/java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!--rootInterface:为生成的接口添加父接口  -->
            <property name="rootInterface" value=""/>
		</javaClientGenerator>
		
		<!-- 对所有的表进行转换  tableName="%"-->
		<!-- <table tableName="%"></table> -->
		
		<!-- 转换指定数据库表 -->
		<table tableName="t_user"></table>
		<table tableName="items"></table>

	</context>
</generatorConfiguration>